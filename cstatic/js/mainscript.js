/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "../cjs/base.js":
/*!**********************!*\
  !*** ../cjs/base.js ***!
  \**********************/
/***/ (() => {

eval("/////////////////////////////////////////////////////////////////////////////////\r\n// Determine dark or light theme for raster images\r\n/////////////////////////////////////////////////////////////////////////////////\r\nfunction detectColorScheme() {\r\n  var theme = \"\";\r\n  //local storage is used to override OS theme settings\r\n  switch (getCookie(\"theme\")) {\r\n    case \"light\":\r\n      document.getElementById(\"jsddnavthemelight\").classList.add(\"disabled\");\r\n      break;\r\n    case \"dark\":\r\n      theme = \"dark\";\r\n      document.getElementById(\"jsddnavthemedark\").classList.add(\"disabled\");\r\n      break;\r\n    case \"Auto\":\r\n      document.getElementById(\"jsddnavthemeauto\").classList.add(\"disabled\");\r\n      break;\r\n    case \"\":\r\n      if (!window.matchMedia) {\r\n        return false;\r\n      } else if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\r\n        //OS theme setting detected as dark\r\n        theme = \"dark\";\r\n      }\r\n      document.getElementById(\"jsddnavthemeauto\").classList.add(\"disabled\");\r\n      break;\r\n    default:\r\n  }\r\n  if (theme == \"dark\") {\r\n    $(\".Logo1Light\").css(\"display\", \"none\");\r\n    $(\".Logo1Dark\").css(\"display\", \"block\");\r\n  }\r\n}\r\ndetectColorScheme();\r\n\r\n/////////////////////////////////////////////////////////////////////////////////\r\n// Get page language from html header\r\n/////////////////////////////////////////////////////////////////////////////////\r\nconst pageLanguage = document.documentElement.lang;\r\n\r\n/////////////////////////////////////////////////////////////////////////////////\r\n// Button toggle container display\r\n// Parent class  toggleDisplayCtnWithBtn, childs  toggleDisplayCtn and toggleDisplayBtn\r\n/////////////////////////////////////////////////////////////////////////////////\r\nconst toggleDisplayCtnWithBtn_List = document.getElementsByClassName(\"toggleDisplayCtnWithBtn\");\r\nfor (var i = 0; i < toggleDisplayCtnWithBtn_List.length; i++) {\r\n  const toggleDisplayCtn = toggleDisplayCtnWithBtn_List[i].getElementsByClassName(\"toggleDisplayCtn\")[0];\r\n  const toggleDisplayBtn = toggleDisplayCtnWithBtn_List[i].getElementsByClassName(\"toggleDisplayBtn\")[0];\r\n  if (toggleDisplayBtn !== null && toggleDisplayCtn !== null) {\r\n    toggleDisplayBtn.onclick = function() {\r\n      if (toggleDisplayCtn.style.display !== \"none\") {\r\n        toggleDisplayCtn.style.display = \"none\";\r\n      } else {\r\n        toggleDisplayCtn.style.display = \"block\";\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////////////\r\n// Password eye toggling\r\n/////////////////////////////////////////////////////////////////////////////////\r\nconst toggleDisplayPasswordWithBtn_List = document.getElementsByClassName(\"toggleDisplayPasswordWithBtn\");\r\nfor (var i = 0; i < toggleDisplayPasswordWithBtn_List.length; i++) {\r\n  const toggleDisplayPassword = toggleDisplayPasswordWithBtn_List[i].getElementsByClassName(\"toggleDisplayPassword\")[0];\r\n  const toggleDisplayPassBtn = toggleDisplayPasswordWithBtn_List[i].getElementsByClassName(\"toggleDisplayPassBtn\")[0];\r\n  if (toggleDisplayPassword !== null !== null && toggleDisplayPassBtn) {\r\n    toggleDisplayPassBtn.onclick = function() {\r\n      // toggle the type attribute\r\n      const type = toggleDisplayPassword.getAttribute(\"type\") === \"password\" ? \"text\" : \"password\";\r\n      toggleDisplayPassword.setAttribute(\"type\", type);\r\n      // toggle the eye icon\r\n      this.classList.toggle('fa-eye');\r\n      this.classList.toggle('fa-eye-slash');\r\n    };\r\n  }\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////////////\r\n// Keep horizontal scroll to the right in tables\r\n/////////////////////////////////////////////////////////////////////////////////\r\nconst tableScrollRight_Lists = document.getElementsByClassName(\"tableScrollRight\");\r\nif (tableScrollRight_Lists.length > 0) {\r\n\r\n  window.onload = (event) => {\r\n    setTableScrollRight()\r\n  };\r\n\r\n  $(window).resize(function() {\r\n    setTableScrollRight()\r\n  });\r\n\r\n  function setTableScrollRight() {\r\n    for (var i = 0; i < tableScrollRight_Lists.length; i++) {\r\n      tableScrollRight_Lists[i].scrollLeft = tableScrollRight_Lists[i].scrollWidth;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////\r\n// Make entire table row a link\r\n/////////////////////////////////////////////////////////////////////////////////\r\n$(document).ready(function($) {\r\n  $(\".entireTableRowIsLink\").click(function() {\r\n    window.document.location = $(this).data(\"href\");\r\n  });\r\n});\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////\r\n// Cookie functions\r\n/////////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction setCookie(cname, cvalue, exdays) {\r\n  const d = new Date();\r\n  d.setTime(d.getTime() + (exdays * 86400000));\r\n  let expires = \"expires=\" + d.toUTCString();\r\n  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\n\r\nfunction getCookie(cname) {\r\n  let name = cname + \"=\";\r\n  let ca = document.cookie.split(';');\r\n  for (let i = 0; i < ca.length; i++) {\r\n    let c = ca[i];\r\n    while (c.charAt(0) == ' ') {\r\n      c = c.substring(1);\r\n    }\r\n    if (c.indexOf(name) == 0) {\r\n      return c.substring(name.length, c.length);\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////////////\r\n// Cookie banner and custom options\r\n/////////////////////////////////////////////////////////////////////////////////\r\n// Cookie banner\r\nconst cookiesBannerDiv = document.getElementById(\"cookiesBannerDiv\");\r\n\r\nfunction closeCookieBanner() {\r\n  if (cookiesBannerDiv.style.display !== \"none\") {\r\n    cookiesBannerDiv.style.display = \"none\";\r\n  } else {\r\n    cookiesBannerDiv.style.display = \"block\";\r\n  }\r\n}\r\n$(\"#cookiesAcceptAllBtn\").click(function() {\r\n  setCookie(\"cookie_pref\", \"111\", 120);\r\n  closeCookieBanner();\r\n});\r\n\r\n// Cookie custom options\r\n$(\"#cookiesCustomAllBtn\").click(function() {\r\n  setCookie(\"cookie_pref\", \"111\", 120);\r\n  closeCookieBanner();\r\n});\r\n$(\"#cookiesCustomOptBtn\").click(function() {\r\n  let cookiePrefTemp = (document.getElementById(\"switchCookie2\").checked) ? '1' : '0';\r\n  cookiePrefTemp += (document.getElementById(\"switchCookie3\").checked) ? '1' : '0';\r\n  cookiePrefTemp += (document.getElementById(\"switchCookie4\").checked) ? '1' : '0';\r\n  setCookie(\"cookie_pref\", cookiePrefTemp, 120);\r\n  closeCookieBanner();\r\n});\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////\r\n// Back-to-top button functions\r\n/////////////////////////////////////////////////////////////////////////////////\r\n\r\nvar btnBackToTop = document.getElementById(\"btnBackToTop\");\r\nif (btnBackToTop) {\r\n  window.onscroll = function() {\r\n    scrollTresholdDetectFunction()\r\n  };\r\n\r\n  function scrollTresholdDetectFunction() {\r\n    let scroolTrigger = 200;\r\n    if (document.body.scrollTop > scroolTrigger || document.documentElement.scrollTop > scroolTrigger) {\r\n      btnBackToTop.style.opacity = '0.85';\r\n    } else {\r\n      btnBackToTop.style.opacity = '0';\r\n    }\r\n  }\r\n\r\n  function backToTopFunction() {\r\n    window.scrollTo({\r\n      left: 0,\r\n      top: 0,\r\n      behavior: \"smooth\"\r\n    })\r\n  }\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////////////\r\n// Chat Host list, begin chat\r\n/////////////////////////////////////////////////////////////////////////////////\r\nfunction loadChatPrepare() {\r\n  ////// fetch chat data on server\r\n  var urlInitChat = JSON.parse(document.getElementById('url-init-chat').textContent);\r\n  csrf_token = $('input[name=\"csrfmiddlewaretoken\"]').val();\r\n  let formData = new FormData();\r\n  formData.append(\"csrfmiddlewaretoken\", csrf_token);\r\n  fetch(urlInitChat, {\r\n      method: 'POST',\r\n      body: formData,\r\n    }).then(response => response.json())\r\n    .then(response => {\r\n      createListChatHosts(response);\r\n      toggleChatPrepare();\r\n    })\r\n}\r\n\r\nconst chatPrepareDiv = document.getElementById(\"chat-prepare\");\r\n\r\nfunction createListChatHosts(json) {\r\n  var listChatStaff = json.chat_staff_list\r\n  var is_authenticated = json.is_authenticated\r\n  let innerHTML = ``\r\n  if (listChatStaff.length > 0) {\r\n    innerHTML += `\r\n      <div class=\"d-flex justify-content-between mb-2\">\r\n        <span class=\"fs-6\">Online:</span>\r\n        <span class=\"fs-6\">Select</span>\r\n      </div>\r\n    `;\r\n    for (let i = 0; i < listChatStaff.length; i++) {\r\n      innerHTML += `\r\n        <div class=\"container p-0 m-0 mb-2\">\r\n          <div class=\"row p-0 m-0\">\r\n            <label class=\"form-check-label p-0 m-0\" for=\"flexRadioChatHost${i}\">\r\n              <div class=\"d-flex align-items-center p-0 m-0\">\r\n                <div class=\"col-3\">\r\n                  <img src=\"${listChatStaff[i][1]}\" width=\"40px\" alt=\"Avatar\" style=\"border-radius: 50%;\">\r\n                </div>\r\n                <div class=\"col-7\">\r\n                  <div class=\"fs-6\">${listChatStaff[i][2]}</div>\r\n                  <div class=\"fs-6\">${listChatStaff[i][3]}</div>\r\n                </div>\r\n                <div class=\"col-1 form-check d-flex justify-content-end\">\r\n                  <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioChatHost\" id=\"flexRadioChatHost${i}\" value=\"${listChatStaff[i][0]}\">\r\n                </div>\r\n              </div>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div class=\"row p-0 m-0\">\r\n      `;\r\n    }\r\n    if (!is_authenticated) {\r\n      innerHTML += `\r\n          <div>Name:</div>\r\n          <input type=\"text\" id=\"anonymous_chat_client_name\" name=\"anonymous_chat_client_name\" maxlength=\"255\"><br>\r\n          <div>Organisation:</div>\r\n          <input type=\"text\" id=\"anonymous_chat_client_desc\" name=\"anonymous_chat_client_desc\" maxlength=\"255\"><br>\r\n      `;\r\n    }\r\n\r\n    innerHTML += `\r\n          <div>Subject:</div>\r\n          <input type=\"text\" id=\"chat_subject\" name=\"chat_subject\" maxlength=\"255\"><br>\r\n        </div>\r\n        <div class=\"row p-0 m-0\">\r\n          <button class=\"\"  onclick=\"startChat()\" title=\"start chat\">Start chat</button>\r\n        </div>\r\n    `;\r\n  }\r\n  chatPrepareDiv.innerHTML = innerHTML;\r\n}\r\n\r\nfunction toggleChatPrepare() {\r\n  chatPrepareDiv.classList.toggle(\"is-active\");\r\n}\r\n\r\n/////////// open new tab OR focus on existing tab   ////////////\r\nvar windowTabChat = null;\r\n\r\nfunction startChat(button) {\r\n  ////// fetch open the chat window\r\n  var urlSaveChat = JSON.parse(document.getElementById('url-save-chat').textContent);\r\n  var urlStartChat = JSON.parse(document.getElementById('url-start-chat').textContent);\r\n  var chat_host_id = null;\r\n  var anonymous_chat_client_name = null;\r\n  var anonymous_chat_client_desc = null;\r\n  var chat_subject = null;\r\n  var slides = document.getElementsByName(\"flexRadioChatHost\");\r\n  for (var i = 0; i < slides.length; i++) {\r\n    if (slides.item(i).checked) {\r\n      chat_host_id = slides.item(i).value;\r\n    };\r\n  }\r\n  try {\r\n    anonymous_chat_client_name = document.getElementById('anonymous_chat_client_name').value;\r\n    anonymous_chat_client_desc = document.getElementById('anonymous_chat_client_desc').value;\r\n  } catch {}\r\n  chat_subject = document.getElementById('chat_subject').value;\r\n  csrf_token = $('input[name=\"csrfmiddlewaretoken\"]').val();\r\n  let formData = new FormData();\r\n  formData.append(\"csrfmiddlewaretoken\", csrf_token);\r\n  if (chat_host_id != null && chat_subject != \"\") {\r\n    if (anonymous_chat_client_name == null || anonymous_chat_client_name != null && anonymous_chat_client_name != \"\" && chat_subject != \"\") {\r\n      formData.append(\"chat_host_id\", chat_host_id);\r\n      formData.append(\"anonymous_chat_client_name\", anonymous_chat_client_name);\r\n      formData.append(\"anonymous_chat_client_desc\", anonymous_chat_client_desc);\r\n      formData.append(\"chat_subject\", chat_subject);\r\n      fetch(urlSaveChat, {\r\n          method: 'POST',\r\n          body: formData,\r\n        }).then(response => response.json())\r\n        .then(response => {\r\n          if (response.result == \"success\") {\r\n            urlStartChat = urlStartChat.slice(0, -2); // remove last 2 characters, 0/\r\n            urlStartChat += response.chat_session_id + '/'\r\n              // open a new tab, always reuse the same window for chat\r\n            if (windowTabChat == null || windowTabChat.closed) {\r\n              windowTabChat = window.open(urlStartChat, 'windowTabChat');\r\n            } else {\r\n              windowTabChat.location.href = urlStartChat;\r\n              windowTabChat.focus();\r\n            }\r\n            toggleChatPrepare();\r\n          }\r\n        })\r\n    };\r\n  };\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////////////\r\n//    navbar swipe link string with touch, mouse wheel or drag\r\n/////////////////////////////////////////////////////////////////////////////////\r\nconst navbarSwipeMenu = document.getElementById(\"navbarSwipeMenu\");\r\n// mouse wheel scroll horizontally\r\nnavbarSwipeMenu.addEventListener(\"wheel\", event => {\r\n  event.preventDefault();\r\n  navbarSwipeMenu.scrollLeft += event.deltaY / 5;\r\n});\r\n\r\n// mouse click-drag-release scroll horizontally\r\nnavbarSwipeMenu.addEventListener(\"mousedown\", event => {\r\n  let preventClickTreshold = false\r\n  let navswipeStartPosition = event.clientX;\r\n  let navswipeStartScrollLeft = navbarSwipeMenu.scrollLeft;\r\n\r\n  function handleNavSwipeMousemove(event) {\r\n    const displacementInPixels = navswipeStartPosition - event.clientX;\r\n    navbarSwipeMenu.scrollLeft = navswipeStartScrollLeft + displacementInPixels;\r\n    if (Math.abs(displacementInPixels) > 2) {\r\n      preventClickTreshold = true;\r\n    }\r\n  }\r\n  document.addEventListener(\"mousemove\", handleNavSwipeMousemove);\r\n\r\n  function handlePreventLinkClick(event) {\r\n    if (preventClickTreshold) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  navbarSwipeMenu.addEventListener(\"click\", handlePreventLinkClick);\r\n\r\n  function handleNavSwipeMouseup(event) {\r\n    setTimeout(function() {\r\n      document.removeEventListener(\"mousemove\", handleNavSwipeMousemove);\r\n      document.removeEventListener(\"mouseup\", handleNavSwipeMouseup);\r\n      navbarSwipeMenu.removeEventListener(\"click\", handlePreventLinkClick);\r\n    }, 0);\r\n  }\r\n  document.addEventListener(\"mouseup\", handleNavSwipeMouseup);\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////\r\n//\r\n/////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////\r\n//\r\n/////////////////////////////////////////////////////////////////////////////////\r\nfunction throttle(func, delay) {\r\n  let lastCall = 0;\r\n\r\n  return function(...args) {\r\n    const now = Date.now();\r\n\r\n    if (now - lastCall < delay) {\r\n      return;\r\n    }\r\n\r\n    lastCall = now;\r\n    return func.apply(this, args);\r\n  };\r\n}\r\n/////////////////////////////////////////////////////////////////////////////////\r\n//  close open bs dropdown menus with escape key\r\n/////////////////////////////////////////////////////////////////////////////////\r\n// window.addEventListener('keydown', function(event) {\r\n//   if (event.key === 'Escape') {\r\n//     // Get all shown dropdown elements\r\n//     const dropdowns = document.querySelectorAll('.dropdown-menu.show');\r\n//     // Loop through each dropdown and remove the 'show' class\r\n//     for (var i = 0; i < dropdowns.length; i++) {\r\n//       dropdowns[i].classList.remove('show');\r\n//       // Get the button that controls this dropdown\r\n//       const button = dropdowns[i].parentNode.querySelector('[aria-expanded]');\r\n//       if (button) {\r\n//         // Set 'aria-expanded' to 'false'\r\n//         button.setAttribute('aria-expanded', 'false');\r\n//       }\r\n//     }\r\n//   }\r\n// });\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////\r\n//\r\n/////////////////////////////////////////////////////////////////////////////////\n\n//# sourceURL=webpack://zap/../cjs/base.js?");

/***/ }),

/***/ "../cjs/search.js":
/*!************************!*\
  !*** ../cjs/search.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   wsiToSearchMessageReceived: () => (/* binding */ wsiToSearchMessageReceived),\n/* harmony export */   wsiToSearchSendQuery: () => (/* binding */ wsiToSearchSendQuery)\n/* harmony export */ });\n/* harmony import */ var _wsi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wsi.js */ \"../cjs/wsi.js\");\n\r\n\r\n\r\n\r\nfunction wsiToSearchSendQuery() { searchToWsiSendQuery(); };\r\nfunction wsiToSearchMessageReceived(message) { showSearchResults(message) };\r\n\r\nconst pageLanguage = document.documentElement.lang;\r\n\r\n\r\nvar screenWidthLg = 992; // Replace with your value\r\n\r\nconst navSearchTriggerBtn = document.getElementsByClassName('btn_nav__search')[0];\r\nconst navSearchMain = document.getElementsByClassName('navSearchMain')[0];\r\n// Fill the div with HTML code\r\nlet navSearchPlaceHolder;\r\nif (pageLanguage == \"fr\") {\r\n  navSearchPlaceHolder = \"Rechercher\";\r\n} else {\r\n  navSearchPlaceHolder = \"Search\";\r\n}\r\nnavSearchMain.innerHTML = `\r\n  <div class=\"d-flex flex-column align-items-center text_color\">\r\n    <div class=\"navSearchBoxDiv0\">\r\n      <div class=\"d-flex d-sm-none navSearchBtnBack navSearchBtnRound\" type=\"button\">\r\n        <svg width=\"30\" height=\"30\">\r\n          <use href=\"/static/images/icons/arrowb.svg#img\"></use>\r\n        </svg>\r\n      </div>\r\n      <div class=\"navSearchBoxDiv1\">\r\n        <div class=\" navSearchBoxDiv2\">\r\n          <input class=\"navSearchInputTxt\" type=\"text\" placeholder=\"${navSearchPlaceHolder}\" maxlength=\"50\"/>\r\n        </div>\r\n        <div class=\"navSearchBtnEnter\" type=\"button\">\r\n          <svg width=\"18\" height=\"18\">\r\n            <use href=\"/static/images/icons/search.svg#img\"></use>\r\n          </svg>\r\n        </div>\r\n        <svg class=\"navSearchIconLoupe\" width=\"14\" height=\"14\">\r\n          <use href=\"/static/images/icons/search.svg#img\"></use>\r\n        </svg>\r\n        <div class=\"navSearchBtnClearX navSearchBtnRound\" type=\"button\">\r\n          <svg width=\"20\" height=\"20\">\r\n            <use href=\"/static/images/icons/x-lg.svg#img\"></use>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"navSearchResDiv0\">\r\n    </div>\r\n  </div>\r\n`;\r\n\r\n// For each one, get a second level of elements by class name within the iteration\r\nconst navSearchInputTxt = navSearchMain.getElementsByClassName('navSearchInputTxt')[0];\r\nconst navSearchIconLoupe = navSearchMain.getElementsByClassName('navSearchIconLoupe')[0];\r\nconst navSearchBtnClearX = navSearchMain.getElementsByClassName('navSearchBtnClearX')[0];\r\nconst navSearchBtnEnter = navSearchMain.getElementsByClassName('navSearchBtnEnter')[0];\r\nconst navSearchBtnBack = navSearchMain.getElementsByClassName('navSearchBtnBack')[0];\r\nconst navSearchBoxDiv0 = navSearchMain.getElementsByClassName('navSearchBoxDiv0')[0];\r\nconst navSearchBoxDiv2 = navSearchMain.getElementsByClassName('navSearchBoxDiv2')[0];\r\nconst navSearchResDiv0 = navSearchMain.getElementsByClassName('navSearchResDiv0')[0];\r\n\r\nfunction showSearchControl() {\r\n  navSearchIconLoupe.style.display = \"block\";\r\n  navSearchBoxDiv2.style.marginLeft = '0';\r\n  navSearchBoxDiv2.style.paddingLeft = '25px';\r\n  navSearchBoxDiv2.style.border = '1px solid var(--color-searchborderselect)';\r\n  navSearchResDiv0.style.display = 'block';\r\n  if (!window.matchMedia('(min-width: ' + screenWidthLg + 'px)').matches) {\r\n    navSearchMain.style.display = \"block\";\r\n  }\r\n  navSearchInputTxt.focus();\r\n  navSearchTriggerBtn.setAttribute('aria-expanded', 'true');\r\n  // hide the main page scroll bar under a certain screen width\r\n  if (window.innerWidth < 620) {\r\n    document.body.style.overflowY = 'hidden';\r\n  }\r\n  (0,_wsi_js__WEBPACK_IMPORTED_MODULE_0__.wsiOpenSharedSocket)();\r\n  sendWSnavSearchMessage();\r\n}\r\n\r\nfunction hideSearchControl() {\r\n  navSearchIconLoupe.style.display = \"none\";\r\n  navSearchBoxDiv2.style.marginLeft = '25px';\r\n  navSearchBoxDiv2.style.paddingLeft = '0';\r\n  navSearchBoxDiv2.style.border = '1px solid var(--color-searchbutton)';\r\n  navSearchResDiv0.style.display = 'none';\r\n  if (!window.matchMedia('(min-width: ' + screenWidthLg + 'px)').matches) {\r\n    navSearchMain.style.display = \"none\";\r\n  }\r\n  navSearchInputTxt.blur();\r\n  navSearchTriggerBtn.setAttribute('aria-expanded', 'false');\r\n  document.body.style.overflowY = 'auto';\r\n}\r\n\r\nvar activatedSearchResults = false;\r\n\r\nfunction activateSearchBox() {\r\n  activatedSearchResults = true;\r\n  showSearchControl();\r\n\r\n  // Unhide navSearchBtnClearX if there is text inside the input field\r\n  if (navSearchInputTxt.value !== \"\") {\r\n    navSearchBtnClearX.style.display = \"flex\";\r\n  }\r\n\r\n  function deactivateSearchBox() {\r\n    activatedSearchResults = false;\r\n    navSearchInputTxt.removeEventListener('input', handleInputTextChange);\r\n    navSearchBtnClearX.removeEventListener('mousedown', handlePreventXbuttonFocusLoss);\r\n    navSearchBtnClearX.removeEventListener('mouseup', handleClickOnXbutton);\r\n    navSearchMain.removeEventListener('mousedown', handlePreventLeavingInput);\r\n    navSearchMain.removeEventListener('wheel', handleScrollingFromMainCtn);\r\n    document.removeEventListener('mousedown', handleClickedOutside);\r\n    document.removeEventListener('keydown', handleEscapeKeydown);\r\n    navSearchBtnBack.removeEventListener('click', handleBackButtonClick);\r\n    navSearchTriggerBtn.removeEventListener('click', handleSearchTriggerBtnClick);\r\n    hideSearchControl();\r\n  }\r\n\r\n  function handleInputTextChange(event) {\r\n    // Unhide navSearchBtnClearX if there is text inside the input field\r\n    if (this.value !== \"\") {\r\n      navSearchBtnClearX.style.display = \"flex\";\r\n    } else {\r\n      // Hide navSearchBtnClearX if the input field is empty\r\n      navSearchBtnClearX.style.display = \"none\";\r\n    }\r\n    sendWSnavSearchMessage()\r\n  }\r\n  navSearchInputTxt.addEventListener('input', handleInputTextChange);\r\n\r\n  function handlePreventXbuttonFocusLoss(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  }\r\n  navSearchBtnClearX.addEventListener('mousedown', handlePreventXbuttonFocusLoss);\r\n\r\n  function handleClickOnXbutton(event) {\r\n    navSearchInputTxt.value = \"\";\r\n    navSearchInputTxt.focus();\r\n    navSearchBtnClearX.style.display = \"none\";\r\n    sendWSnavSearchMessage()\r\n  }\r\n  navSearchBtnClearX.addEventListener('mouseup', handleClickOnXbutton);\r\n\r\n  function handlePreventLeavingInput(event) {\r\n    if (event.target !== navSearchInputTxt) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  navSearchMain.addEventListener('mousedown', handlePreventLeavingInput);\r\n\r\n  function handleScrollingFromMainCtn(event) {\r\n    var delta = Math.max(-1, Math.min(1, (event.wheelDelta || -event.detail)));\r\n    navSearchResDiv0.scrollTop -= (delta * 30);\r\n    event.preventDefault();\r\n  }\r\n  navSearchMain.addEventListener('wheel', handleScrollingFromMainCtn);\r\n\r\n  function handleClickedOutside(event) {\r\n    let clickedOnScrollbar = document.documentElement.clientWidth <= event.clientX;\r\n    if (!clickedOnScrollbar &&\r\n      !navSearchMain.contains(event.target) &&\r\n      !navSearchResDiv0.contains(event.target) &&\r\n      !navSearchTriggerBtn.contains(event.target)) {\r\n      // The click occurred outside of both elements\r\n      deactivateSearchBox();\r\n    }\r\n  }\r\n  document.addEventListener('mousedown', handleClickedOutside);\r\n\r\n  function handleEscapeKeydown(event) {\r\n    if (event.key === 'Escape') {\r\n      deactivateSearchBox();\r\n    }\r\n  }\r\n  document.addEventListener('keydown', handleEscapeKeydown);\r\n\r\n  function handleBackButtonClick(event) {\r\n    deactivateSearchBox();\r\n  }\r\n  navSearchBtnBack.addEventListener(\"click\", handleBackButtonClick);\r\n\r\n  function handleSearchTriggerBtnClick(event) {\r\n    if (navSearchTriggerBtn.getAttribute('aria-expanded') === 'true') {\r\n      deactivateSearchBox();\r\n    }\r\n  }\r\n  navSearchTriggerBtn.addEventListener(\"click\", handleSearchTriggerBtnClick);\r\n\r\n}\r\n\r\nnavSearchInputTxt.addEventListener(\"mousedown\", function() {\r\n  if (!activatedSearchResults) {\r\n    activateSearchBox();\r\n  }\r\n});\r\n\r\nnavSearchBtnEnter.addEventListener(\"click\", function() {\r\n  console.log(\"search button click\")\r\n});\r\n\r\nnavSearchTriggerBtn.addEventListener('click', function() {\r\n  if (navSearchTriggerBtn.getAttribute('aria-expanded') === 'false') {\r\n    if (!activatedSearchResults) {\r\n      activateSearchBox();\r\n    }\r\n  }\r\n});\r\n\r\n// Change the display based on windows width\r\nfunction setSearchBoxDisplayPerScreenWidth() {\r\n  if (window.matchMedia('(min-width: ' + screenWidthLg + 'px)').matches) {\r\n    navSearchMain.style.display = \"block\";\r\n  } else {\r\n    if (navSearchMain.style.display == \"block\" &&\r\n      navSearchResDiv0.style.display == \"none\") {\r\n      navSearchMain.style.display = \"none\";\r\n    }\r\n  }\r\n}\r\nnavSearchMain.style.display = \"none\";\r\nnavSearchResDiv0.style.display = \"none\";\r\nsetSearchBoxDisplayPerScreenWidth()\r\n\r\nwindow.addEventListener('resize', function() {\r\n  setSearchBoxDisplayPerScreenWidth();\r\n});\r\n\r\n\r\n\r\n\r\n\r\n// /////////////////////////////////////////////////////////////////////////////////\r\n// //  Nav Search websocket\r\n// /////////////////////////////////////////////////////////////////////////////////\r\nvar navSearchStartTimer;\r\n\r\nfunction showSearchResults(jsonObject) {\r\n  navSearchStartTimer = performance.now();\r\n  var jsonArray = JSON.parse(jsonObject);\r\n  var ul = document.createElement(\"ul\");\r\n  for (var i = 0; i < jsonArray.length; i++) {\r\n    // Create a list item element\r\n    var li = document.createElement(\"li\");\r\n    // Set the content of the list item to the name and age of each person\r\n    li.innerHTML = jsonArray[i].title + \" (\" + jsonArray[i].vote + \")\";\r\n    // Append the list item to the list\r\n    ul.appendChild(li);\r\n  }\r\n  navSearchResDiv0.innerHTML = \"\";\r\n  navSearchResDiv0.appendChild(ul);\r\n\r\n  let timeDiff = performance.now() - navSearchStartTimer;\r\n  console.log(`${timeDiff} ms.`);\r\n}\r\n\r\nfunction searchToWsiSendQuery() {\r\n  navSearchStartTimer = performance.now();\r\n  (0,_wsi_js__WEBPACK_IMPORTED_MODULE_0__.wsiSend)('s' + _wsi_js__WEBPACK_IMPORTED_MODULE_0__.wsiCurrentTabId + navSearchInputTxt.value);\r\n}\r\n\r\nconst sendWSnavSearchMessage = debounce_search(searchToWsiSendQuery, 400);\r\n\r\nfunction debounce_search(func, delay) {\r\n  let lastCallTime = 0;\r\n  let timeoutId;\r\n\r\n  return function() {\r\n    const context = this;\r\n    const args = arguments;\r\n    const now = Date.now();\r\n\r\n    clearTimeout(timeoutId);\r\n\r\n    if (now - lastCallTime < delay) {\r\n      timeoutId = setTimeout(() => {\r\n        lastCallTime = Date.now();\r\n        func.apply(context, args);\r\n      }, delay - (now - lastCallTime));\r\n    } else {\r\n      lastCallTime = now;\r\n      func.apply(context, args);\r\n    }\r\n  }\r\n}\n\n//# sourceURL=webpack://zap/../cjs/search.js?");

/***/ }),

/***/ "../cjs/wsi.js":
/*!*********************!*\
  !*** ../cjs/wsi.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   wsiCurrentTabId: () => (/* binding */ wsiCurrentTabId),\n/* harmony export */   wsiOpenSharedSocket: () => (/* binding */ wsiOpenSharedSocket),\n/* harmony export */   wsiReconnect: () => (/* binding */ wsiReconnect),\n/* harmony export */   wsiSend: () => (/* binding */ wsiSend)\n/* harmony export */ });\n/* harmony import */ var _search_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./search.js */ \"../cjs/search.js\");\n/////////////////////////////////////////////////////////////////////////////////\r\n//    Dynamic imports\r\n//    do the imports in js instead of normal imports in case the module\r\n//    is not present since search or filespro may not be required\r\n/////////////////////////////////////////////////////////////////////////////////\r\nlet wsiToFilesproAskForListOfFiles, wsiToFilesproMessageReceived;\r\n\r\nimport ( /* webpackIgnore: true */ './filescript.js')\r\n.then((module) => {\r\n    wsiToFilesproAskForListOfFiles = module.wsiToFilesproAskForListOfFiles;\r\n    wsiToFilesproMessageReceived = module.wsiToFilesproMessageReceived;\r\n  })\r\n  .catch((error) => {});\r\n\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////\r\n//    wsi\r\n/////////////////////////////////////////////////////////////////////////////////\r\n// localStorage of the browser is used to store the last tabId in a single char\r\n// get the next wsiCurrentTabId in storage, single character\r\nvar wsiCurrentTabId = localStorage.getItem('wsiCurrentTabId');\r\nif (wsiCurrentTabId !== null) {\r\n  var nextTabId = wsiCurrentTabId.charCodeAt(0) + 1;\r\n  //   33; // '!' to  126; // '~'\r\n  if (nextTabId > 126) {\r\n    nextTabId = 33;\r\n  }\r\n  localStorage.setItem('wsiCurrentTabId', String.fromCharCode(nextTabId));\r\n} else {\r\n  wsiCurrentTabId = String.fromCharCode(33);\r\n  localStorage.setItem('wsiCurrentTabId', wsiCurrentTabId);\r\n}\r\n\r\nfunction handleWsEvent(event) {\r\n  switch (event.type) {\r\n    case 'onopen':\r\n      console.log('WebSocket is open');\r\n      // check if the module is loaded\r\n      if (typeof _search_js__WEBPACK_IMPORTED_MODULE_0__.wsiToSearchSendQuery === 'function') {\r\n        (0,_search_js__WEBPACK_IMPORTED_MODULE_0__.wsiToSearchSendQuery)();\r\n      }\r\n      if (typeof wsiToFilesproAskForListOfFiles === 'function') {\r\n        wsiToFilesproAskForListOfFiles();\r\n      }\r\n      break;\r\n    case 'onclose':\r\n      console.log('WebSocket is closed');\r\n      break;\r\n    case 'onerror':\r\n      console.log('WebSocket encountered an error');\r\n      break;\r\n    case 'onmessage':\r\n      console.log('Received message:', event.data);\r\n      if (event.data.length > 2) {\r\n        let message = event.data.substring(2)\r\n        if (event.data[1] == wsiCurrentTabId) {\r\n          switch (event.data[0]) {\r\n            case 's':\r\n              // check if the module is loaded\r\n              if (typeof _search_js__WEBPACK_IMPORTED_MODULE_0__.wsiToSearchMessageReceived === 'function') {\r\n                (0,_search_js__WEBPACK_IMPORTED_MODULE_0__.wsiToSearchMessageReceived)(message);\r\n              }\r\n            case 'f':\r\n              if (typeof wsiToFilesproMessageReceived === 'function') {\r\n                wsiToFilesproMessageReceived(message);\r\n              }\r\n          }\r\n        }\r\n      }\r\n      break;\r\n    default:\r\n  }\r\n}\r\n\r\nconst websocketUrl = (window.location.protocol === 'https:' ? 'wss://' : 'ws://') +\r\n  window.location.host + '/wsi/';\r\nlet wsworker;\r\nlet gsocket;\r\nlet useSharedWorker = !!window.SharedWorker; // is supported\r\n\r\nfunction wsiOpenSharedSocket() {\r\n  if (typeof wsworker === 'undefined') {\r\n    if (useSharedWorker) {\r\n      wsworker = new SharedWorker('/static/js/sharedWorker.js');\r\n\r\n      wsworker.port.onmessage = function(e) {\r\n        handleWsEvent(e.data);\r\n      };\r\n\r\n      wsworker.port.start();\r\n\r\n      wsworker.port.postMessage({\r\n        command: 'connect',\r\n        url: websocketUrl\r\n      });\r\n    } else {\r\n      initiateWebsocketFallback();\r\n    }\r\n    window.addEventListener('beforeunload', function() {\r\n      if (useSharedWorker) {\r\n        wsworker.port.postMessage({\r\n          command: 'removePort'\r\n        });\r\n      } else {\r\n        gsocket.close()\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction initiateWebsocketFallback() {\r\n  gsocket = new WebSocket(websocketUrl);\r\n\r\n  gsocket.onopen = function() {\r\n    handleWsEvent({\r\n      type: 'onopen'\r\n    });\r\n  };\r\n\r\n  gsocket.onmessage = function(e) {\r\n    handleWsEvent({\r\n      type: 'onmessage',\r\n      data: e.data\r\n    });\r\n  };\r\n\r\n  gsocket.onerror = function() {\r\n    handleWsEvent({\r\n      type: 'onerror'\r\n    });\r\n  };\r\n\r\n  gsocket.onclose = function() {\r\n    handleWsEvent({\r\n      type: 'onclose'\r\n    });\r\n  };\r\n}\r\n\r\nfunction wsiSend(message) {\r\n  if (useSharedWorker) {\r\n    wsworker.port.postMessage({\r\n      command: 'send',\r\n      message: message\r\n    });\r\n  } else if (gsocket && gsocket.readyState === WebSocket.OPEN) {\r\n    gsocket.send(message);\r\n  }\r\n}\r\n\r\nfunction wsiReconnect() {\r\n  if (useSharedWorker) {\r\n    wsworker.port.postMessage({\r\n      command: 'reconnect',\r\n      url: websocketUrl\r\n    });\r\n  } else if (gsocket && gsocket.readyState === WebSocket.OPEN) {\r\n    gsocket.close();\r\n    gsocket = null;\r\n    initiateWebsocketFallback();\r\n  }\r\n}\n\n//# sourceURL=webpack://zap/../cjs/wsi.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_require__("../cjs/base.js");
/******/ 	__webpack_require__("../cjs/wsi.js");
/******/ 	var __webpack_exports__ = __webpack_require__("../cjs/search.js");
/******/ 	
/******/ })()
;